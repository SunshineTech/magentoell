<?php
/**
 * ITORIS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the ITORIS's Magento Extensions License Agreement
 * which is available through the world-wide-web at this URL:
 * http://www.itoris.com/magento-extensions-license.html
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to sales@itoris.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extensions to newer
 * versions in the future. If you wish to customize the extension for your
 * needs please refer to the license agreement or contact sales@itoris.com for more information.
 *
 * @category   ITORIS
 * @package    ITORIS_MWISHLIST
 * @copyright  Copyright (c) 2012 ITORIS INC. (http://www.itoris.com)
 * @license    http://www.itoris.com/magento-extensions-license.html  Commercial License
 */
?>
<?php
/** @var $this Itoris_MWishlist_Block_Frontview */
$_namesmodel = Mage::getModel('itoris_mwishlist/mwishlistnames');
$_namescollection = $_namesmodel->getnamecollection(null, true);
$_id = $this->getRequest()->getParam('tabId', $this->getTabId());
$_isEnabledPriceVisibility = $this->getDataHelper()->isEnabledProductVisibility();
$_canAddAllToShoppingCart = true;
$_saleLabelHelper = $this->helper('sdm_catalog/salelabel');
$_helper = $this->helper('sdm_catalog');
?>
<div id="central">
<div id='central_head'>
	<?php
	$temp = array();
	$temp = $_namesmodel->getNameById($_id);
	$wishlistName = $temp['multiwishlist_name'];
	$_wishlistId = $temp['multiwishlist_id']; ?>

	<table width="100%">
		<tr>
			<td>
				<?php echo $this->__('Wishlist: '); ?>
				<?php if ($temp['multiwishlist_editable']): ?>
					<input type="text" id="mwishlist_new_name" value="<?php echo htmlentities($wishlistName) ?>" />
					<button type="button" class="button" onclick="mwishlistRename(<?php echo $_wishlistId ?>);">
						<span><span><?php echo $this->__('Rename') ?></span></span>
					</button>
				<?php else: ?>
					<span><?php echo htmlentities($wishlistName) ?></span>
				<?php endif; ?>
			</td>
			<?php if ($_wishlistId != 1): ?>
				<td>
					<?php if ($temp['multiwishlist_editable'] && !$temp['multiwishlist_is_main']): ?>
						<div id='delbutton'>
							<button type="button" title="<?php echo $this->__('Delete') ?>"
									onclick="deleteWishlist(<?php echo $_wishlistId ?>)" class="button delete">
								<span><span><?php echo $this->__('Delete wishlist') ?></span></span></button>
						</div>
					<?php endif; ?>
				</td>

			<?php endif ?>
		</tr>
	</table>
</div>
<?php if ($this->getHasWishlistItems()): ?>
	<form id="wishlist-view-form" action="<?php echo $this->getUrl('*/*/update') ?>" method="post">
	<input type="hidden" name="mwishlist_id" value="<?php echo $_wishlistId ?>" />
	<fieldset>
	<input type="hidden" name="tabId" value="<?php echo $_id?>">
	<?php echo $this->getBlockHtml('formkey')?>
	<table class="data-table" id="wishlist-table">
		<?php if ($temp['multiwishlist_editable']): ?>
			<col/>
		<?php endif; ?>
		<col/>
		<col width="30%">
		<col/>
		<col/>
		<col width="17%">
		<thead>
		<tr>
			<?php if ($temp['multiwishlist_editable']): ?>
				<th>
					<input type="checkbox" name="all" onclick="checkAll(this.form,this.name);">
				</th>
			<?php endif; ?>
			<th><?php echo $this->__('Product') ?></th>
			<th><span class="nobr"></span></th>
			<th class="a-center"><?php echo $this->__('Price') ?></th>
			<th class="a-center"><?php echo $this->__('Quantity') ?></th>
			<th><span class="nobr"></span></th>
		</tr>
		</thead>
		<tbody>
		<?php foreach ($this->getWishlistItems() as $_item): ?>
			<?php
			$_product = $_item->getProduct();
			$_priceVisibilityConfig = $_isEnabledPriceVisibility ? $this->getProductPriceVisibilityConfig($_product) : null;
			$_urlParamName = Mage_Core_Controller_Front_Action::PARAM_NAME_URL_ENCODED;
			$_continueUrl = Mage::helper('core')->urlEncode(Mage::getUrl('*/*/*', array(
				'_current' => true,
				'_use_rewrite' => true,
			)));
			$_store = Mage::app()->getStore($_item->getStoreId());
			$_addToCartUrl = $this->getUrl('wishlist/index/cart', array(
				'item' => $_item->getWishlistItemId(),
				'qty'  => '{{qty}}',
			));
			//$isVisibleProduct = $_product->isVisibleInSiteVisibility();
			$_wishlistItemId = $_item->getId();
			$_stockLevel = $this->getStockQty($_product);
			?>
			<tr>
				<?php if ($temp['multiwishlist_editable']): ?>
					<td><input type="checkbox" class="single" name="<?php echo $_item->getWishlistItemId() ?>"></td>
				<?php endif; ?>
				<td class='wishlist-row'>
					<a class="product-image"
					   href="<?php echo $_product->getProductUrl() ?>"
					   title="<?php echo $this->htmlEscape($_product->getName()) ?>"><img
							src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(113, 113); ?>"
							width="113" height="113" alt="<?php echo $this->htmlEscape($_product->getName()) ?>"/></a>
					<?php // Show sale label ?>
					<?php echo $_saleLabelHelper->getSaleLabelHtml(
						$_product,
						'icon',
						$_item->getDiscountTypeApplied()
					); ?>
				</td>
				<td>
					<h2 class="product-name">
						<a href="<?php echo $_product->getProductUrl() ?>">
							<?php echo $this->htmlEscape($_product->getName()) ?>
						</a>
					</h2>
					<div class="sku"><?php echo $this->__($_helper->getSkuLabel($_product) . '%s', $_product->getSku()) ?></div>
					<?php if($_stockLevel):?>
						<div class="available-qty">
							<p class="remaining"><?php echo $this->__('Only %s left!', "<strong>{$_stockLevel}</strong>") ?></p>
							<p><?php echo $this->__('This item may become unavailable if someone else purchases it.')?></p>
						</div>
					<?php endif?>
					<textarea name="description[<?php echo $_item->getWishlistItemId() ?>]" rows="3" cols="5"
							  onfocus="focusComment(this)" onblur="focusComment(this)"
							  title="<?php echo $this->__('Comment') ?>"><?php echo $_item->getDescription()
							? $_item->getDescription() : $this->__('Please, enter your comments...') ?></textarea>
					<?php echo $this->getDetailsHtml($_item) ?>
					<div class="move-copy">
						<?php if ($temp['multiwishlist_editable']): ?>
							<?php if (count($_namescollection) > 1): ?>
								<?php if (true): ?>
									<p><?php echo $this->__('Copy/Move to Wishlist') ?></p>
								<?php endif ?>
								<div class="custom-dropdown">
								<select class="input.select" id="select[<?php echo $_item->getId() ?>]" style="width:100%;margin-bottom: 5px;"
										style="margin-bottom:10;" value=""/>
									<?php foreach ($_namescollection as $_row): ?>
										<?php if ($_wishlistId == $_row['multiwishlist_id']) continue; ?>
										<option value="<?php echo $_row['multiwishlist_id']?>"><?php echo $this->__($_row['multiwishlist_name'])?></option>
									<?php endforeach ?>
								</select>
								</div>
								<button type="button" title="<?php echo $this->__('Move') ?>" onclick="moveBetweenLists(<?php echo $_item->getId()?>,$('select[<?php echo $_item->getId() ?>]').value)" class="button btn-move"><span><span><?php echo $this->__('Move') ?></span></span></button>
								<button type="button" title="<?php echo $this->__('Copy') ?>" onclick="copyToWlist(<?php echo $_item->getId()?>,$('select[<?php echo $_item->getId() ?>]').value)" class="button btn-copy"><span><span><?php echo $this->__('Copy') ?></span></span></button>
							<?php endif; ?>
						<?php endif; ?>
					</div>
				</td>
				<td class="a-center">
					<?php if (!$_priceVisibilityConfig || $_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_DEFAULT
						|| $_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_SHOW_PRICE_DISALLOW_ADD_TO_CART): ?>
						<?php
						echo $this->getCleanProductPriceHtml();
						echo "<pre>";print_r($_product->getData());die;
						$_finalPrice = $_product->getFinalPrice(1);
						$_pointsPrice = $this->getPointsPrice($_product, $_finalPrice);
						?>
						<p class="price-box">
					<span class="regular-price" id="product-price-<?php echo $_product->getId()?><?php echo $_product->getIdSuffix() ?>">
						<?php if ($_pointsPrice && $_pointsPrice['override']): ?>
							<span class="price"><?php echo $this->getProductRewardsHelper()->__('%d RP', $_pointsPrice['points']) ?></span>
						<?php else: ?>

							<span class="price"><?php echo Mage::helper('core')->currency($_finalPrice, true, false); ?> <?php if ($_pointsPrice && $_pointsPrice['points']): echo $this->getProductRewardsHelper()->__('or %d RP', $_pointsPrice['points']); endif; ?></span>
						<?php endif; ?>
					</span>
						</p>
					<?php elseif ($_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_OUT_OF_STOCK): ?>
						<p class="availability out-of-stock"><span><?php echo $this->__('Out of Stock') ?></span></p>
					<?php elseif ($_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_CUSTOM_MESSAGE): ?>
						<p><?php echo $_priceVisibilityConfig['message'] ?></p>
					<?php endif; ?>
				</td>
				<td class="a-center">
					<?php if (!$_priceVisibilityConfig || $_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_DEFAULT): ?>
						<input type="text" class="input-text qty" name="qty[<?php echo $_item->getId() ?>]" value="<?php echo $_item->getQty() > 0 ? (int)$_item->getQty() : 1 ?>"/>
						<?php $_product = Mage::getModel('catalog/product')->load($_item->getProductId()); ?>
						<?php echo $this->getDetailsLinkHtml($_item); ?>
					<?php elseif ($_priceVisibilityConfig && $_priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_SHOW_PRICE_DISALLOW_ADD_TO_CART): ?>
						<p><?php echo $_priceVisibilityConfig['message'] ?></p>
					<?php else:?>
						<?php $_canAddAllToShoppingCart = false; ?>
					<?php endif; ?>

					<ul>
						<li class="remove">
							<button type="button" class="button delete" onclick="removeItem(<?php echo $_item->getId()?>)"><span><span><?php echo $this->__('Remove') ?></span></span></button>
						</li>
						<li class="update">
							<button type="submit" title="<?php echo $this->__('Update Wishlist') ?>" onclick="this.name='do'"><span><span><?php echo $this->__('Update') ?></span></span></button>
						</li>
					</ul>
				</td>
				<td>
					<?php if ($_product->getButtonVisiblePDP()): ?>
						<?php if ($_product->getButtonType() == 'add-to-cart'): ?>
							<button type="button" title="<?php echo $this->__('Add to Cart') ?>" onclick="mwishlistAddToCart('<?php echo $_addToCartUrl ?>', <?php echo $_item->getId() ?>);" class="button btn-cart">
								<span><span><?php echo $this->__('Add to Cart') ?></span></span>
							</button>
						<?php else: ?>
							<p class="availability">
								<span><?php echo $_product->getButtonValue() ?></span>
							</p>
						<?php endif; ?>
					<?php endif ?>
				</td>
			</tr>
		<?php endforeach ?>
		</tbody>
	</table>
	<script type="text/javascript">decorateTable('wishlist-table')</script>
	<div class="buttons-set buttons-set2">
		<table width="100%">
			<tbody>
			<tr>
				<td style="vertical-align: top;">
					<div class="div-mwishbottomright">
						<button type="button" onclick="setLocation('<?php echo $this->getUrl('wishlist/index/share', array('id' => $_wishlistId)) ?>')"
								title="<?php echo $this->__('Share Wishlist') ?>" class="button btn-copy">
							<span><span><?php echo $this->__('Share Wishlist') ?></span></span></button>
						<?php //if($this->isSaleable()):?>
						<?php if ($_canAddAllToShoppingCart): ?>
							<button type="button" title="<?php echo $this->__('Add All to Cart') ?>"
									onclick="addAllWItemsToCart(<?php echo $_wishlistId ?>)" class="button btn-copy">
								<span><span><?php echo $this->__('Add All to Cart') ?></span></span></button>
						<?php endif; ?>
					</div>
				</td>
			</tr>
			</tbody>
		</table>
	</div>
	</fieldset>
	</form>
<?php else: ?>
	<p><?php echo $this->__('You have no items in your wishlist.') ?></p>
<?php endif ?>
</div>
<script type="text/javascript">

if ($$('.iwishtabs .titles .title.current')[0]) {
	$$('.iwishtabs .titles .title.current')[0].removeClassName('current');
}
$('tab_title_<?php echo $_id;?>').addClassName('current');
function checkAll(form, checkname) {
	if (form.elements[checkname].checked == true) {
		for (var i = 1, n = form.elements.length; i < n; i++) {
			if (form.elements[i].type == 'checkbox') {
				form.elements[i].checked = true;
			}
		}
	} else {
		for (i = 1,n = form.elements.length; i < n; i++) {
			if (form.elements[i].type == 'checkbox') {
				form.elements[i].checked = true;
				form.elements[i].checked = form.elements[i].defaultChecked;
			}
		}
	}
}
function deleteWishlist(wishlistId) {
	if (confirmRemoveWishlist()) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {removeWishlist: wishlistId},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('tabsandcontent').update(transport.responseText);

				initializeTabsSlider();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	}
}
function removeItem(itemId) {
	if (confirmRemoveWishlistItem()) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {remove: itemId, tabId: $$('.title.current')[0].id.substring(10)},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	}
}
function copyToWlist(itemId, listId) {
	itorisWishlist.hideMobileContent();
	new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
		parameters: {itemCopy: itemId, list: listId, tabId: listId},
		onSuccess: function(transport) {
			Element.hide('loading-mask');
			$('central').update(transport.responseText);
			mwishlistUpdateLink();
			retruncateOptionsTimeout();
			setTimeout(function(){itorisWishlist.showMobileContent();}, 100);
		},
		onLoading: Element.show('loading-mask')
	});
}
function copyCheckedToWlist(listId) {
	var array = new Array();
	var i = 0;
	$$('.single').each(function(elem) {
		if (elem.checked) {
			array[i] = elem.name;
			i++;
		}
	});
	if (array[0]) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {'itemsCopy[]': array,
				list: listId, tabId: listId},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	} else {
		alert('Items not selected')
	}
}
function moveBetweenLists(itemId, listId) {
	itorisWishlist.hideMobileContent();
	new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
		parameters: {itemMove: itemId, list: listId, tabId: listId},
		onSuccess: function(transport) {
			Element.hide('loading-mask');
			$('central').update(transport.responseText);
			mwishlistUpdateLink();
			retruncateOptionsTimeout();
			setTimeout(function(){itorisWishlist.showMobileContent();}, 100);
		},
		onLoading: Element.show('loading-mask')
	});
}
function moveCheckedItemsBetweenLists(listId) {
	var array = new Array();
	var i = 0;
	$$('.single').each(function(elem) {
		if (elem.checked) {
			array[i] = elem.name;
			i++;
		}
	});
	if (array[0]) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {'itemsMove[]': array,
				list: listId, tabId: listId},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistAddToCartCheckedItems(wishlistId) {
	var items = mwishlistGetSelectedItems();
	if (items.length) {
		var params = {
			'items[]': items,
			wishlist_id: wishlistId
		};
		$$('#wishlist-view-form .qty').each(
			function (input) {
				params[input.name] = input.value;
			}
		);
		var url = '<?php echo $this->getUrl('*/*/addToCartSelectedItems') ?>';
		url += ((url.indexOf('?') >= 0) ? '&' : '?') + 'wishlist_id=' + wishlistId;
		var separator = '&';
		$$('#wishlist-view-form .qty').each(
			function (input) {
				url += separator + input.name + '=' + encodeURIComponent(input.value);
			}
		);
		for (var i = 0; i < items.length; i++) {
			url += separator + 'items[' + i + ']=' + items[i];
		}
		setLocation(url);
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistDeleteCheckedItems(listId) {
	var items = mwishlistGetSelectedItems();
	if (items.length) {
		if (confirm('<?php echo addslashes($this->__('Do you really want to delete selected products?')) ?>')) {
			new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax') ?>', {
				method: 'post',
				parameters: {
					'itemsDelete[]': items,
					list: listId,
					tabId: listId
				},
				onSuccess: function(transport) {
					itorisWishlist.hideMobileContent(true);
					Element.hide('loading-mask');
					$('central').update(transport.responseText);
					mwishlistUpdateLink();
					retruncateOptionsTimeout();
					itorisWishlist.showMobileContent(true);
				},
				onLoading: Element.show('loading-mask')
			});
		}
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistGetSelectedItems() {
	var items = [];
	$$('.single').each(function(elem) {
		if (elem.checked) {
			items.push(elem.name);
		}
	});
	return items;
}
function confirmRemoveWishlistItem() {
	return confirm('<?php echo $this->__('Are you sure you want to remove this product from your wishlist?') ?>');
}
function confirmRemoveWishlist() {
	return confirm('<?php echo $this->__('Do you really want to delete this Wishlist along with all products in it?') ?>');
}
function focusComment(obj) {
	if (obj.value == 'Please, enter your comments...') {
		obj.value = '';
	} else if (obj.value == '') {
		obj.value = 'Please, enter your comments...';
	}
}
function addAllWItemsToCart(wishlistId, formId) {
	var url = '<?php echo $this->getUrl('*/*/allcart') ?>';
	url += (url.indexOf('?') >= 0) ? '&wishlist_id=' + wishlistId : '?wishlist_id=' + wishlistId;
	var separator = '&';
	$$('#' + (formId || 'wishlist-view-form') + ' .qty').each(
		function (input, index) {
			url += separator + input.name + '=' + encodeURIComponent(input.value);
		}
	);
	setLocation(url);
}

function mwishlistAddToCart(url, itemId) {
	var qtyElm = document.getElementsByName('qty[' + itemId + ']')[0];
	if (qtyElm) {
		url = url.sub('{{qty}}', parseNumber(qtyElm.value));
	}
	setLocation(url);
}

function mwishlistRename(wishlistId) {
	var newName = $('mwishlist_new_name').value.strip();
	if (newName.length) {
		if (newName != currentWishlistName) {
			new Ajax.Request('<?php echo $this->getUrl('wishlist/index/renameWishlist') ?>', {
				parameters: {name: newName, id: wishlistId},
				onComplete: function(res) {
					Element.hide('loading-mask');
					var resObj = res.responseText.evalJSON();
					if (resObj.error) {
						alert(resObj.error);
					} else if (resObj.ok) {
						currentWishlistName = newName;
						var titleElm = $$('.iwishtabs .titles .title.current .center')[0];
						if (titleElm) {
							titleElm.update(currentWishlistName);
						}
					}
				},
				onLoading: Element.show('loading-mask')
			});
		}
	} else {
		alert('<?php echo addslashes($this->__('Please enter a new name')) ?>');
	}
}
currentWishlistName = '<?php echo addslashes($wishlistName) ?>';
</script>